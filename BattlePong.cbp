<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="BattlePong" />
		<Option pch_mode="2" />
		<Option compiler="gcc" />
		<Build>
			<Target title="W32 Release">
				<Option output="bin/W32/BattlePong" prefix_auto="1" extension_auto="1" />
				<Option working_dir="./" />
				<Option object_output="obj/W32/Release/" />
				<Option type="0" />
				<Option compiler="gcc" />
				<Option projectLinkerOptionsRelation="2" />
				<Compiler>
					<Add option="-O3" />
					<Add option="-DX86CPU" />
					<Add option="-DBUILDING_DLL" />
					<Add directory="$(#mingw.include)" />
					<Add directory="$(#mingw.include)/SDL" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add option="-lmingw32" />
					<Add option="-lSDLmain" />
					<Add library="../allegro/lib/liballegro_color-5.0.10-mt.a" />
					<Add library="../allegro/lib/liballegro_audio-5.0.10-mt.a" />
					<Add library="../allegro/lib/liballegro-5.0.10-mt.a" />
					<Add library="../allegro/lib/liballegro_font-5.0.10-mt.a" />
					<Add library="../allegro/lib/liballegro_image-5.0.10-mt.a" />
					<Add library="../allegro/lib/liballegro_acodec-5.0.10-mt.a" />
					<Add library="../allegro/lib/liballegro_primitives-5.0.10-mt.a" />
					<Add library="../allegro/lib/liballegro_ttf-5.0.10-mt.a" />
					<Add directory="$(#mingw.lib)" />
					<Add directory="../allegro/lib" />
					<Add directory="../enet-1.3.11/bin/W32" />
				</Linker>
			</Target>
			<Target title="W32 Debug">
				<Option output="bin/W32/BattlePong_Debug" prefix_auto="1" extension_auto="1" />
				<Option working_dir="./" />
				<Option object_output="obj/W32/Debug/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Option use_console_runner="0" />
				<Option projectLinkerOptionsRelation="2" />
				<Compiler>
					<Add option="-Winit-self" />
					<Add option="-Wunreachable-code" />
					<Add option="-g" />
					<Add option="-DX86CPU" />
					<Add option="-DBUILDING_DLL" />
					<Add option="-D_DEBUG" />
					<Add option="-D_DEEP_DEBUG" />
					<Add directory="$(#mingw.include)" />
					<Add directory="$(#mingw.include)/SDL" />
				</Compiler>
				<Linker>
					<Add option="-lmingw32" />
					<Add option="-lSDLmain" />
					<Add library="../allegro/lib/liballegro_color-5.0.10-mt.a" />
					<Add library="../allegro/lib/liballegro_audio-5.0.10-mt.a" />
					<Add library="../allegro/lib/liballegro-5.0.10-mt.a" />
					<Add library="../allegro/lib/liballegro_font-5.0.10-mt.a" />
					<Add library="../allegro/lib/liballegro_image-5.0.10-mt.a" />
					<Add library="../allegro/lib/liballegro_acodec-5.0.10-mt.a" />
					<Add library="../allegro/lib/liballegro_primitives-5.0.10-mt.a" />
					<Add library="../allegro/lib/liballegro_ttf-5.0.10-mt.a" />
					<Add directory="$(#mingw.lib)" />
					<Add directory="../enet-1.3.11/bin/W32/Debug" />
				</Linker>
			</Target>
			<Target title="Pandora Release">
				<Option output="bin/Pandora/BattlePong" prefix_auto="1" extension_auto="0" />
				<Option working_dir="./" />
				<Option object_output="obj/Pandora/Release/" />
				<Option type="0" />
				<Option compiler="armelfgcc" />
				<Compiler>
					<Add option="-mcpu=cortex-a8" />
					<Add option="-mfpu=neon" />
					<Add option="-O3" />
					<Add option="-mtune=cortex-a8" />
					<Add option="-march=armv7-a" />
					<Add option="-ftree-vectorize" />
					<Add option="-mfloat-abi=softfp" />
					<Add option="-ffast-math" />
					<Add option="-fsingle-precision-constant" />
					<Add option="-fno-exceptions" />
					<Add option="-fno-rtti" />
					<Add option="-pipe" />
					<Add option="-DARMCPU" />
					<Add option="-DPANDORA" />
					<Add option="-DMOBILE_DEVICE" />
					<Add directory="$(#pandora_sdk.include)" />
					<Add directory="$(#pandora_sdk.include)/SDL" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add option="-static-libstdc++" />
					<Add option="-lfreetype" />
					<Add option="-lts" />
					<Add option="-lmad" />
					<Add option="-lz" />
					<Add option="-lpng" />
					<Add directory="$(#pandora_sdk.lib)" />
					<Add directory="../enet-1.3.11/bin/Pandora" />
				</Linker>
			</Target>
			<Target title="Pandora Debug">
				<Option output="bin/Pandora/BattlePong_Debug" prefix_auto="1" extension_auto="0" />
				<Option working_dir="./" />
				<Option object_output="obj/Pandora/Debug/" />
				<Option type="0" />
				<Option compiler="armelfgcc" />
				<Compiler>
					<Add option="-mcpu=cortex-a8" />
					<Add option="-mfpu=neon" />
					<Add option="-mtune=cortex-a8" />
					<Add option="-march=armv7-a" />
					<Add option="-ftree-vectorize" />
					<Add option="-mfloat-abi=softfp" />
					<Add option="-ffast-math" />
					<Add option="-fsingle-precision-constant" />
					<Add option="-fno-exceptions" />
					<Add option="-fno-rtti" />
					<Add option="-pipe" />
					<Add option="-DARMCPU" />
					<Add option="-DPANDORA" />
					<Add option="-DMOBILE_DEVICE" />
					<Add option="-D_DEBUG" />
					<Add directory="$(#pandora_sdk.include)" />
					<Add directory="$(#pandora_sdk.include)/SDL" />
				</Compiler>
				<Linker>
					<Add option="-static-libstdc++" />
					<Add option="-lfreetype" />
					<Add option="-lts" />
					<Add option="-lmad" />
					<Add option="-lz" />
					<Add option="-lpng" />
					<Add directory="$(#pandora_sdk.lib)" />
					<Add directory="../enet-1.3.11/bin/Pandora" />
				</Linker>
			</Target>
			<Target title="Linux Release">
				<Option output="bin/Linux/BattlePong" prefix_auto="1" extension_auto="0" />
				<Option working_dir="./" />
				<Option object_output="obj/Linux/Release/" />
				<Option type="0" />
				<Option compiler="gcc" />
				<Option projectIncludeDirsRelation="2" />
				<Option projectLibDirsRelation="2" />
				<Compiler>
					<Add option="-O3" />
					<Add option="-DX86CPU" />
					<Add directory="/usr/local/include" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add directory="/usr/local/lib" />
				</Linker>
			</Target>
			<Target title="Linux Debug">
				<Option output="bin/Linux/BattlePong_Debug" prefix_auto="1" extension_auto="0" />
				<Option working_dir="./" />
				<Option object_output="obj/Linux/Debug/" />
				<Option type="0" />
				<Option compiler="gcc" />
				<Option projectIncludeDirsRelation="2" />
				<Option projectLibDirsRelation="2" />
				<Compiler>
					<Add option="-g" />
					<Add option="-DX86CPU" />
					<Add option="-D_DEBUG" />
					<Add option="-DDEBUG" />
					<Add directory="/usr/local/include" />
				</Compiler>
				<Linker>
					<Add directory="/usr/local/lib" />
				</Linker>
			</Target>
		</Build>
		<Linker>
			<Add library="enet" />
			<Add library="allegro" />
			<Add library="allegro_audio" />
			<Add library="allegro_acodec" />
			<Add library="allegro_font" />
			<Add library="allegro_ttf" />
			<Add library="allegro_primitives" />
			<Add library="allegro_color" />
			<Add library="allegro_image" />
		</Linker>
		<Unit filename="framework/event.cpp" />
		<Unit filename="framework/event.h" />
		<Unit filename="framework/framework.cpp" />
		<Unit filename="framework/framework.h" />
		<Unit filename="framework/includes.h" />
		<Unit filename="framework/main.cpp" />
		<Unit filename="framework/network.cpp" />
		<Unit filename="framework/network.h" />
		<Unit filename="framework/stage.h" />
		<Unit filename="framework/stagestack.cpp" />
		<Unit filename="framework/stagestack.h" />
		<Unit filename="game/assetDefines.h" />
		<Unit filename="game/battle/battle.cpp" />
		<Unit filename="game/battle/battle.h" />
		<Unit filename="game/battle/battleball.cpp" />
		<Unit filename="game/battle/battleball.h" />
		<Unit filename="game/battle/battleover.cpp" />
		<Unit filename="game/battle/battleover.h" />
		<Unit filename="game/battle/battleplayer.cpp" />
		<Unit filename="game/battle/battleplayer.h" />
		<Unit filename="game/battle/cloneball.cpp" />
		<Unit filename="game/battle/cloneball.h" />
		<Unit filename="game/battle/fireball.cpp" />
		<Unit filename="game/battle/fireball.h" />
		<Unit filename="game/battle/freezeball.cpp" />
		<Unit filename="game/battle/freezeball.h" />
		<Unit filename="game/battle/homingfireball.cpp" />
		<Unit filename="game/battle/homingfireball.h" />
		<Unit filename="game/battle/particle.cpp" />
		<Unit filename="game/battle/particle.h" />
		<Unit filename="game/battle/pickup.cpp" />
		<Unit filename="game/battle/pickup.h" />
		<Unit filename="game/battle/sendball.cpp" />
		<Unit filename="game/battle/sendball.h" />
		<Unit filename="game/boot.cpp" />
		<Unit filename="game/boot.h" />
		<Unit filename="game/classic/classic.cpp" />
		<Unit filename="game/classic/classic.h" />
		<Unit filename="game/classic/classicball.cpp" />
		<Unit filename="game/classic/classicball.h" />
		<Unit filename="game/core/arena.h" />
		<Unit filename="game/core/player.cpp" />
		<Unit filename="game/core/player.h" />
		<Unit filename="game/core/projectile.cpp" />
		<Unit filename="game/core/projectile.h" />
		<Unit filename="game/getkeypress.cpp" />
		<Unit filename="game/getkeypress.h" />
		<Unit filename="game/menu.cpp" />
		<Unit filename="game/menu.h" />
		<Unit filename="game/menunetwork.cpp" />
		<Unit filename="game/menunetwork.h" />
		<Unit filename="game/menunetworkclient.cpp" />
		<Unit filename="game/menunetworkclient.h" />
		<Unit filename="game/menunetworkhost.cpp" />
		<Unit filename="game/menunetworkhost.h" />
		<Unit filename="game/settings.cpp" />
		<Unit filename="game/settings.h" />
		<Unit filename="library/angle.cpp" />
		<Unit filename="library/angle.h" />
		<Unit filename="library/animation.cpp" />
		<Unit filename="library/animation.h" />
		<Unit filename="library/box.cpp" />
		<Unit filename="library/box.h" />
		<Unit filename="library/configfile.cpp" />
		<Unit filename="library/configfile.h" />
		<Unit filename="library/line.cpp" />
		<Unit filename="library/line.h" />
		<Unit filename="library/maths.h" />
		<Unit filename="library/memory.cpp" />
		<Unit filename="library/memory.h" />
		<Unit filename="library/spritesheet.cpp" />
		<Unit filename="library/spritesheet.h" />
		<Unit filename="library/vector2.cpp" />
		<Unit filename="library/vector2.h" />
		<Unit filename="shaders/greyscale.cpp" />
		<Unit filename="shaders/greyscale.h" />
		<Unit filename="shaders/scanlines.cpp" />
		<Unit filename="shaders/scanlines.h" />
		<Unit filename="shaders/shader.h" />
		<Unit filename="shaders/shaders.h" />
		<Unit filename="transitions/fadeacross.cpp" />
		<Unit filename="transitions/fadeacross.h" />
		<Unit filename="transitions/fadein.cpp" />
		<Unit filename="transitions/fadein.h" />
		<Unit filename="transitions/strips.cpp" />
		<Unit filename="transitions/strips.h" />
		<Unit filename="transitions/tiled.cpp" />
		<Unit filename="transitions/tiled.h" />
		<Unit filename="transitions/transitions.h" />
		<Extensions>
			<DoxyBlocks>
				<comment_style block="0" line="0" />
				<doxyfile_project />
				<doxyfile_build />
				<doxyfile_warnings />
				<doxyfile_output />
				<doxyfile_dot />
				<general />
			</DoxyBlocks>
			<code_completion />
			<envvars />
			<debugger />
			<lib_finder disable_auto="1" />
		</Extensions>
	</Project>
</CodeBlocks_project_file>
